'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'countingValleys' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER steps
 *  2. STRING path
 */

function countingValleys(steps, path) {
    let arr=[0]
    let dd=''
    let count=0
    let ee=0
    for(let i =0; i<steps;i++){
       if(path[i]==='U'){
           count+=1
           
       }else{
           count-=1
           
       }
    arr.push(count)
    }

    return arr
    let length = arr.filter(el=> el===0).length

    for(let i =0; i<steps+1;i++){
        if(arr[i]===0&&(arr[i-1]>0||arr[i-1]===undefined)){
           dd+='D'
           
        } if(arr[i]===0&&(arr[i-1]<0||arr[i-1]===undefined)){
            dd+='U'
        }
    }
  return dd
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const steps = parseInt(readLine().trim(), 10);

    const path = readLine();

    const result = countingValleys(steps, path);

    ws.write(result + '\n');

    ws.end();
}
